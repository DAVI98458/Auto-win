-- Carrega Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

getgenv().AimbotAtivado = false
getgenv().ESPAtivado = false
getgenv().TeamCheck = false
getgenv().DeadCheck = false
getgenv().WallCheck = false

-- Cria janela principal
local Window = Rayfield:CreateWindow({
	Name = "Red Light, Green Light and Glass Bridge",
	LoadingTitle = "Carregando...",
	LoadingSubtitle = "Script by David",
	ConfigurationSaving = { Enabled = false },
	KeySystem = false
})

-- Função de teleporte
local function teleportTo(pos)
	local char = LocalPlayer.Character
	if char and char:FindFirstChild("HumanoidRootPart") then
		char.HumanoidRootPart.CFrame = CFrame.new(pos)
	end
end

-- Aba Auto Win
local AutoWinTab = Window:CreateTab("Auto Win", 4483362458)

AutoWinTab:CreateButton({
	Name = "Auto Win Glass Bridge",
	Callback = function()
		Rayfield:Notify({ Title = "Glass Bridge", Content = "Wait 3 seconds", Duration = 3 })
		teleportTo(Vector3.new(-22, 161, 1546))
		wait(3)
		teleportTo(Vector3.new(195, 161, 1548))
	end
})

AutoWinTab:CreateButton({
	Name = "Auto Win Red Light and Green Light",
	Callback = function()
		Rayfield:Notify({ Title = "Red Light", Content = "Wait 4 seconds", Duration = 4 })
		teleportTo(Vector3.new(338, 4, -189))
		wait(4)
		teleportTo(Vector3.new(-249, 4, -184))
	end
})

AutoWinTab:CreateButton({
	Name = "Safezone",
	Callback = function()
		teleportTo(Vector3.new(-60, 100, 42))
	end
})

-- ESP Highlight
local function CriarOuAtualizarESP(player)
	if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
	if not player.Character:FindFirstChild("Humanoid") or player.Character.Humanoid.Health <= 0 then return end

	local highlight = player.Character:FindFirstChild("EnemyESP")
	if not highlight then
		highlight = Instance.new("Highlight")
		highlight.Name = "EnemyESP"
		highlight.FillTransparency = 0.5
		highlight.OutlineTransparency = 0
		highlight.Adornee = player.Character
		highlight.Parent = player.Character
	end

	local isAlly = player.TeamColor == LocalPlayer.TeamColor
	highlight.FillColor = isAlly and Color3.fromRGB(0, 0, 255) or Color3.fromRGB(255, 0, 0)
	highlight.OutlineColor = highlight.FillColor
end

local function RemoverESP(player)
	if player.Character then
		local esp = player.Character:FindFirstChild("EnemyESP")
		if esp then esp:Destroy() end
	end
end

local function AtualizarTodosESPs()
	if getgenv().ESPAtivado then
		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer then
				CriarOuAtualizarESP(player)
			end
		end
	else
		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer then
				RemoverESP(player)
			end
		end
	end
end

-- Atualização do ESP a cada 1 segundo
task.spawn(function()
	while true do
		AtualizarTodosESPs()
		wait(1)
	end
end)

-- Detecção de novos jogadores e respawns
local function ConectarJogador(player)
	player.CharacterAdded:Connect(function()
		wait(1)
		if getgenv().ESPAtivado then
			CriarOuAtualizarESP(player)
		end
	end)

	if player.Character and getgenv().ESPAtivado then
		CriarOuAtualizarESP(player)
	end
end

for _, player in pairs(Players:GetPlayers()) do
	if player ~= LocalPlayer then
		ConectarJogador(player)
	end
end

Players.PlayerAdded:Connect(function(player)
	if player ~= LocalPlayer then
		ConectarJogador(player)
	end
end)

-- Wall check
local function IsVisible(part)
	local origin = Camera.CFrame.Position
	local direction = (part.Position - origin)
	local params = RaycastParams.new()
	params.FilterDescendantsInstances = {LocalPlayer.Character}
	params.FilterType = Enum.RaycastFilterType.Blacklist
	local result = workspace:Raycast(origin, direction, params)
	return not result or result.Instance:IsDescendantOf(part.Parent)
end

-- Aimbot alvo mais próximo
local function GetClosestTarget()
	local closest = nil
	local shortest = math.huge

	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
			if getgenv().DeadCheck and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health <= 0 then continue end
			if getgenv().WallCheck and not IsVisible(player.Character.Head) then continue end
			if getgenv().TeamCheck and player.TeamColor == LocalPlayer.TeamColor then continue end

			local screenPos, onScreen = Camera:WorldToViewportPoint(player.Character.Head.Position)
			if onScreen then
				local dist = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)).Magnitude
				if dist < shortest then
					shortest = dist
					closest = player
				end
			end
		end
	end
	return closest
end

-- Aimbot loop
RunService.RenderStepped:Connect(function()
	if getgenv().AimbotAtivado then
		local target = GetClosestTarget()
		if target and target.Character and target.Character:FindFirstChild("Head") then
			Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Character.Head.Position)
		end
	end
end)

-- Aba Aimbot
local AimbotTab = Window:CreateTab("Aimbot", 6034287514)

AimbotTab:CreateToggle({
	Name = "Aimbot",
	CurrentValue = false,
	Callback = function(Value)
		getgenv().AimbotAtivado = Value
	end
})

AimbotTab:CreateToggle({
	Name = "ESP All",
	CurrentValue = false,
	Callback = function(Value)
		getgenv().ESPAtivado = Value
	end
})

AimbotTab:CreateToggle({
	Name = "Team Check",
	CurrentValue = false,
	Callback = function(Value)
		getgenv().TeamCheck = Value
	end
})

AimbotTab:CreateToggle({
	Name = "Dead Check",
	CurrentValue = false,
	Callback = function(Value)
		getgenv().DeadCheck = Value
	end
})

AimbotTab:CreateToggle({
	Name = "Wall Check",
	CurrentValue = false,
	Callback = function(Value)
		getgenv().WallCheck = Value
	end
})
