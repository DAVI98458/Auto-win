-- Carregamento oficial do Rayfield com sistema de key
loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Copiar link da key automaticamente
setclipboard("https://lootdest.org/s?nJO3MzzM")

local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")

local Window = Rayfield:CreateWindow({
    Name = "red light, Green light and Glass bridge",
    LoadingTitle = "Shadow Hub",
    LoadingSubtitle = "by @shadown_gd",
    ConfigurationSaving = { Enabled = false },
    Discord = { Enabled = false },
    KeySystem = true,
    KeySettings = {
        Title = "Shadow Hub Key",
        Subtitle = "Enter your key below",
        Note = "The key link has already been copied to your clipboard",
        FileName = "ShadowHubKeyFile",
        SaveKey = false,
        GrabKeyFromSite = false,
        Key = "11.7ðŸ¥³"
    }
})

-- FunÃ§Ãµes auxiliares
local function isAlive(player)
    local character = player.Character
    return character and character:FindFirstChild("Humanoid") and character:FindFirstChild("Humanoid").Health > 0
end

local function isVisible(part)
    local origin = Camera.CFrame.Position
    local result = workspace:Raycast(origin, (part.Position - origin).Unit * 1000, RaycastParams.new({
        FilterDescendantsInstances = {LocalPlayer.Character},
        FilterType = Enum.RaycastFilterType.Blacklist,
        IgnoreWater = true
    }))
    return not result or result.Instance:IsDescendantOf(part.Parent)
end

-- ABA DE AIMBOT
local AimbotTab = Window:CreateTab("Aimbot")

local TeamCheck = false
local DeadCheck = false
local WallCheck = false
local AimbotActive = false
local AimbotNormal = false

AimbotTab:CreateToggle({
    Name = "Team Check",
    CurrentValue = false,
    Callback = function(value) TeamCheck = value end
})

AimbotTab:CreateToggle({
    Name = "Dead Check",
    CurrentValue = false,
    Callback = function(value) DeadCheck = value end
})

AimbotTab:CreateToggle({
    Name = "Wall Check",
    CurrentValue = false,
    Callback = function(value) WallCheck = value end
})

AimbotTab:CreateToggle({
    Name = "Aimbot Normal",
    CurrentValue = false,
    Callback = function(value) AimbotNormal = value end
})

AimbotTab:CreateToggle({
    Name = "On Aimbot",
    CurrentValue = false,
    Callback = function(value) AimbotActive = value end
})

local function getTarget()
    local closest, shortest = nil, math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and isAlive(player) then
            if TeamCheck and player.Team == LocalPlayer.Team then continue end
            if DeadCheck and not isAlive(player) then continue end
            local head = player.Character:FindFirstChild("Head")
            if head then
                if WallCheck and not isVisible(head) then continue end
                local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
                if onScreen then
                    local dist = (Vector2.new(screenPos.X, screenPos.Y) - UserInputService:GetMouseLocation()).Magnitude
                    if dist < shortest then
                        if AimbotActive and (player.Character.HumanoidRootPart.Velocity.Magnitude < 1) then continue end
                        closest = head
                        shortest = dist
                    end
                end
            end
        end
    end
    return closest
end

RunService.RenderStepped:Connect(function()
    if AimbotActive or AimbotNormal then
        local target = getTarget()
        if target then
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Position)
        end
    end
end)

-- ESP com nomes
local function createESP(player)
    local esp = Drawing.new("Text")
    esp.Size = 11
    esp.Center = true
    esp.Outline = true
    esp.Font = 2
    esp.Visible = false
    esp.Color = player.TeamColor.Color

    RunService.RenderStepped:Connect(function()
        if player.Character and player.Character:FindFirstChild("Head") then
            local headPos, onScreen = Camera:WorldToViewportPoint(player.Character.Head.Position)
            esp.Visible = onScreen
            if onScreen then
                esp.Position = Vector2.new(headPos.X, headPos.Y - 20)
                esp.Text = player.Name
                esp.Color = player.TeamColor.Color
            end
        else
            esp.Visible = false
        end
    end)
end

AimbotTab:CreateButton({
    Name = "ESP All Nickname",
    Callback = function()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                createESP(player)
            end
        end
        Players.PlayerAdded:Connect(function(player)
            task.wait(1)
            createESP(player)
        end)
    end
})

-- ABA DE AUTO WIN
local AutoTab = Window:CreateTab("Auto Win")

AutoTab:CreateButton({
    Name = "Red Light Green Light Auto Win",
    Callback = function()
        LocalPlayer.Character:PivotTo(CFrame.new(339, 4, -123))
        task.wait(4)
        LocalPlayer.Character:PivotTo(CFrame.new(-247, 4, -187))
    end
})

AutoTab:CreateButton({
    Name = "Safezone",
    Callback = function()
        LocalPlayer.Character:PivotTo(CFrame.new(383, 4, -80))
    end
})

local AntiFallEnabled = false
AutoTab:CreateToggle({
    Name = "Anti-Fall",
    CurrentValue = false,
    Callback = function(value)
        AntiFallEnabled = value
    end
})

RunService.Heartbeat:Connect(function()
    if AntiFallEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = LocalPlayer.Character.HumanoidRootPart
        if hrp.Velocity.Y < -5 then
            hrp.Velocity = Vector3.new(0, -6, 0)
        end
    end
end)

-- ABA DE MODIFIERS
local Modifiers = Window:CreateTab("Modifiers")

Modifiers:CreateSlider({
    Name = "WalkSpeed",
    Range = {16, 300},
    Increment = 1,
    CurrentValue = 16,
    Callback = function(val)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = val
        end
    end
})

local NoclipEnabled = false
Modifiers:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Callback = function(state)
        NoclipEnabled = state
    end
})

RunService.Stepped:Connect(function()
    if NoclipEnabled and LocalPlayer.Character then
        for _, v in pairs(LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide then
                v.CanCollide = false
            end
        end
    end
end)

local InfJump = false
Modifiers:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Callback = function(val)
        InfJump = val
    end
})

UserInputService.JumpRequest:Connect(function()
    if InfJump and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

-- ABA DE TOOLS
local Tools = Window:CreateTab("Tools")

Tools:CreateButton({
    Name = "TP Tool",
    Callback = function()
        local tool = Instance.new("Tool", LocalPlayer.Backpack)
        tool.RequiresHandle = false
        tool.Name = "TP Tool"
        tool.Activated:Connect(function()
            local mouse = LocalPlayer:GetMouse()
            if mouse then
                LocalPlayer.Character:PivotTo(CFrame.new(mouse.Hit.Position))
            end
        end)
    end
})

Tools:CreateParagraph({ Title = "Info", Content = "More stuff coming soon" })

-- ABA DE CRÃ‰DITOS
local Credits = Window:CreateTab("Credits")

Credits:CreateParagraph({ Title = "Direitor", Content = "@shadown_gd" })
Credits:CreateParagraph({ Title = "Programador", Content = "@shadown_gd and @Shadownchavoso" })

Credits:CreateButton({
    Name = "DISCORD",
    Callback = function()
        setclipboard("https://discord.gg/baSasGFhaG")
    end
})
