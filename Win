-- Carregar Rayfield (certifique-se de ter Rayfield disponível)
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Criar Janela
local Window = Rayfield:CreateWindow({
	Name = "Red Light, Green Light and Glass Bridge",
	LoadingTitle = "Carregando Interface...",
	LoadingSubtitle = "by David",
	ConfigurationSaving = {
		Enabled = false
	},
        Discord = {
        	Enabled = false
    	},
	KeySystem = false
})

-- Criar Aba
local Tab = Window:CreateTab("Auto Win", 4483362458) -- Ícone opcional

-- Função utilitária para teleportar jogador
local function teleportTo(position)
	local character = game.Players.LocalPlayer.Character
	if character and character:FindFirstChild("HumanoidRootPart") then
		character.HumanoidRootPart.CFrame = CFrame.new(position)
	end
end

-- Botão: Auto Win Glass Bridge
Tab:CreateButton({
	Name = "Auto Win Glass Bridge",
	Callback = function()
		Rayfield:Notify({
			Title = "Auto Win Glass Bridge",
			Content = "Wait 3 seconds",
			Duration = 3,
			Image = 4483362458,
			Actions = {}
		})

		-- Primeira posição
		teleportTo(Vector3.new(-22, 161, 1546))

		wait(3)

		-- Segunda posição
		teleportTo(Vector3.new(195, 161, 1548))
	end
})

-- Botão: Auto Win Red Light and Green Light
Tab:CreateButton({
	Name = "Auto Win Red Light and Green Light",
	Callback = function()
		Rayfield:Notify({
			Title = "Auto Win Red Light, Green Light",
			Content = "Wait 4 seconds",
			Duration = 4,
			Image = 4483362458,
			Actions = {}
		})

		-- Primeira posição
		teleportTo(Vector3.new(338, 4, -189))

		wait(4)

		-- Segunda posição
		teleportTo(Vector3.new(-249, 4, -184))
	end
})

-- ✅ Aba: Aimbot
local AimbotTab = Window:CreateTab("Aimbot", 6034287514)

-- Variáveis globais
getgenv().AimbotAtivado = false
getgenv().TeamCheck = false
getgenv().DeadCheck = false
getgenv().WallCheck = false
getgenv().ESPAtivado = false

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Wall Check: linha de visão
local function IsVisible(targetPart)
	if not targetPart then return false end
	local origin = Camera.CFrame.Position
	local direction = (targetPart.Position - origin)
	local raycastParams = RaycastParams.new()
	raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
	raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	raycastParams.IgnoreWater = true
	local result = workspace:Raycast(origin, direction, raycastParams)
	return not result or result.Instance:IsDescendantOf(targetPart.Parent)
end

-- Aimbot alvo mais próximo
local function GetClosestTarget()
	local closestPlayer = nil
	local shortestDistance = math.huge

	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
			if getgenv().TeamCheck and player.Team == LocalPlayer.Team then continue end
			if getgenv().DeadCheck and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health <= 0 then continue end
			if getgenv().WallCheck and not IsVisible(player.Character.Head) then continue end

			local pos, onScreen = Camera:WorldToViewportPoint(player.Character.Head.Position)
			if onScreen then
				local dist = (Vector2.new(pos.X, pos.Y) - Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)).Magnitude
				if dist < shortestDistance then
					shortestDistance = dist
					closestPlayer = player
				end
			end
		end
	end

	return closestPlayer
end

-- Loop de Aimbot
RunService.RenderStepped:Connect(function()
	if getgenv().AimbotAtivado then
		local target = GetClosestTarget()
		if target and target.Character and target.Character:FindFirstChild("Head") then
			Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Character.Head.Position)
		end
	end
end)

-- Função para aplicar/remover ESP
local function AtualizarESP()
	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			local char = player.Character
			if char then
				local highlight = char:FindFirstChild("EnemyESP")

				if getgenv().ESPAtivado then
					if not highlight then
						local esp = Instance.new("Highlight")
						esp.Name = "EnemyESP"
						esp.FillColor = Color3.new(1, 0, 0)
						esp.OutlineColor = Color3.new(1, 0, 0)
						esp.Parent = char
					end
				else
					if highlight then
						highlight:Destroy()
					end
				end
			end
		end
	end
end

-- Monitorar novos jogadores para ESP
Players.PlayerAdded:Connect(function(player)
	player.CharacterAdded:Connect(function()
		wait(1)
		if getgenv().ESPAtivado then
			AtualizarESP()
		end
	end)
end)

-- Aimbot Toggle
AimbotTab:CreateToggle({
	Name = "Aimbot",
	CurrentValue = false,
	Callback = function(value)
		getgenv().AimbotAtivado = value
	end
})

-- ESP Enemy Toggle
AimbotTab:CreateToggle({
	Name = "ESP Enemy",
	CurrentValue = false,
	Callback = function(value)
		getgenv().ESPAtivado = value
		AtualizarESP()
	end
})

-- Team Check Toggle
AimbotTab:CreateToggle({
	Name = "Team Check",
	CurrentValue = false,
	Callback = function(value)
		getgenv().TeamCheck = value
	end
})

-- Dead Check Toggle
AimbotTab:CreateToggle({
	Name = "Dead Check",
	CurrentValue = false,
	Callback = function(value)
		getgenv().DeadCheck = value
	end
})

-- Wall Check Toggle
AimbotTab:CreateToggle({
	Name = "Wall Check",
	CurrentValue = false,
	Callback = function(value)
		getgenv().WallCheck = value
	end
})
